{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Alif Ensemble Debug (Cortex-Debug)",
            "cwd": "${workspaceFolder}",
            "executable": "${command:cmsis-csolution.getBinaryFile}",
            "request": "launch",
            "type": "cortex-debug",
            "runToEntryPoint": "main",
            "servertype": "jlink",
            "showDevDebugOutput": "parsed",
            "device": "${command:cmsis-csolution.getDeviceName}_${command:cmsis-csolution.getProcessorName}",
            "interface": "swd",
            "serverArgs": ["-JLinkDevicesXmlPath", ".alif/JLinkDevices.xml"],
            "preLaunchCommands": [
                "monitor speed 15000"
            ],
            // Armclang has problems generating ELF which can be correctly read by Arm-GNU-GDB
            // Because of this, a hex file is generated which is loaded on the device while debugging
            "overrideLaunchCommands": [
                "monitor reset halt",
                "load ${input:substituteHexFile}",
                "monitor reset halt",
            ],
            "postLaunchCommands": [
                "set $sp = __Vectors[0]",
                "set $pc = __Vectors[1]",
                "set *0xe000ed08 = __Vectors"
            ],
            "rttConfig": {
                "enabled": true,
                "address": "auto",
                "decoders": [
                    {
                        "port": 0,
                        "type": "console"
                    }
                ]
            },
        }
    ],
    // Provide the hex file as input
    // The Command Variable extension is needed for transforming the filename
    "inputs": [
        {
            "id": "substituteHexFile",
            "type": "command",
            "command": "extension.commandvariable.transform",
            "args": {
                "text": "${command:cmsis-csolution.getBinaryFile}",
                "find": "\\.axf",
                "replace": ".hex",
                "flags": "g"
            }
        }
    ]
}
