.syntax unified
.text

.global flops_mve_fp16
.type flops_mve_fp16, %function
flops_mve_fp16:
    push {r4, lr} // save lr
    vmov.f16 r4, s0 // scalar to r4
    wlstp.16 lr, r3, flops_mve_fp16_loop_end // start loop

    vldrh.f16 q1, [r2], #16 // load 4 elements from c
    vldrh.f16 q0, [r1], #16 // load 4 elements from b

flops_mve_fp16_loop:
    .rept 100 // 100 * 16 * 4 = 6400
    vfma.f16 q0, q2, q1
    vfma.f16 q1, q3, q2
    vfma.f16 q2, q0, q3
    vfma.f16 q3, q1, q0
    .endr

    letp lr, flops_mve_fp16_loop // check loop

flops_mve_fp16_loop_end:
    vstrh.f16 q0, [r0], #16 // copy to a

    pop {r4, pc} // return

.global flops_scalar_fp16
.type flops_scalar_fp16, %function
flops_scalar_fp16:
    push {r4, lr} // save lr
    vmov.f32 r4, s0 // scalar to r4
    wlstp.32 lr, r3, flops_scalar_fp16_loop_end // start loop
    vldrw.f32 q1, [r2], #16 // load 4 elements from c
    vldrw.f32 q0, [r1], #16 // load 4 elements from b


flops_scalar_fp16_loop:
    letp lr, flops_scalar_fp16_loop // check loop

flops_scalar_fp16_loop_end:
    vstrw.f32 q0, [r0], #16 // copy to a
    pop {r4, pc} // return

.global flops_scalar_fp32
.type flops_scalar_fp32, %function
flops_scalar_fp32:
    push {r4, lr} // save lr
    vmov.f32 r4, s0 // scalar to r4
    wlstp.32 lr, r3, flops_scalar_fp32_loop_end // start loop

flops_scalar_fp32_loop:
    vldrw.f32 q1, [r2], #16 // load 4 elements from c
    vldrw.f32 q0, [r1], #16 // load 4 elements from b

    .rept 100 // 100 * 2 * 4 = 800
    vfma.f32 s0, s2, s1
    vfma.f32 s1, s3, s2
    vfma.f32 s2, s0, s3
    vfma.f32 s3, s1, s0
    .endr

    vstrw.f32 q0, [r0], #16 // copy to a
    letp lr, flops_scalar_fp32_loop // check loop

flops_scalar_fp32_loop_end:
    pop {r4, pc} // return



.global flops_scalar_fp64
.type flops_scalar_fp64, %function
flops_scalar_fp64:
    push {r4, lr} // save lr
    vmov.f32 r4, s0 // scalar to r4
    wlstp.32 lr, r3, flops_scalar_fp64_loop_end // start loop
    vldrw.f32 q1, [r2], #16 // load 4 elements from c
    vldrw.f32 q0, [r1], #16 // load 4 elements from b

flops_scalar_fp64_loop:
    .rept 100 // 100 * 2 * 4 = 800
    vfma.f64 d0, d2, d1
    vfma.f64 d1, d3, d2
    vfma.f64 d2, d0, d3
    vfma.f64 d3, d1, d0
    .endr

    letp lr, flops_scalar_fp64_loop // check loop

flops_scalar_fp64_loop_end:
    vstrw.f32 q0, [r0], #16 // copy to a
    pop {r4, pc} // return

.global stream_triad_mve_flops
.type stream_triad_mve_flops, %function
/*
 * r0: *a
 * r1: *b
 * r2: *c
 * r3: len
 * s0: scalar
 */
stream_triad_mve_flops:
    //vpush.64 {d8, d9, d10, d11, d12, d13, d14, d15}
    push {r4, lr} // save lr
    vmov.f32 r4, s0 // scalar to r4
    wlstp.32 lr, r3, stream_triad_mve_flops_end // start loop

stream_triad_mve_flops_loop:
    vldrw.f32 q1, [r2], #16 // load 4 elements from c
    vldrw.f32 q0, [r1], #16 // load 4 elements from b
    //vfma.f32 q0, q1, r4 // b[i] + scalar * c[i] = b[i]

vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
vfma.f32 q0, q2, q1
vfma.f32 q1, q3, q2
vfma.f32 q2, q0, q3
vfma.f32 q3, q1, q0
    vstrw.f32 q0, [r0], #16 // copy to a
    letp lr, stream_triad_mve_flops_loop // check loop

stream_triad_mve_flops_end:
    //vpop.64 {d8, d9, d10, d11, d12, d13, d14, d15}
    pop {r4, pc} // return
